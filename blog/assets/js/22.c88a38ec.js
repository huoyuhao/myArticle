(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{375:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端浏览器数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端浏览器数据存储"}},[t._v("#")]),t._v(" 前端浏览器数据存储")]),t._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("h2",{attrs:{id:"sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" sessionStorage")]),t._v(" "),a("h2",{attrs:{id:"localstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" localStorage")]),t._v(" "),a("h2",{attrs:{id:"indexeddb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[t._v("#")]),t._v(" indexedDB")]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h3",{attrs:{id:"sessionstorage数据共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage数据共享"}},[t._v("#")]),t._v(" sessionStorage数据共享")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 使用一个新标签页打开自身，并设置一个 sessionStorage --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("_blank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sessionStorage.setItem('name', 'liam')"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("open myself"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ol",[a("li",[t._v("在浏览器中打开这个 index.html，我们称之为标签页 A。注意：需要用 http 协议打开！例如 http://localhost/index.html")]),t._v(" "),a("li",[t._v("点击页面上的链接，此时会弹出来标签页 B。")]),t._v(" "),a("li",[t._v("在标签页 B 中打开控制台并执行 sessionStorage.getItem('j')")]),t._v(" "),a("li",[t._v("控制台输出's'，这说明标签页 A 和 B 共享了 sessionStorage 中的数据")]),t._v(" "),a("li",[t._v("接下来，先关闭这两个标签页，然后再打开一个标签页 C，再读取一下 j 的值，得到的是 null")])]),t._v(" "),a("p",[t._v("但是如果进行如下操作发现表现与预期不符合：")]),t._v(" "),a("ol",[a("li",[t._v("在浏览器中打开这个 index.html，我们称之为标签页 A。注意：需要用 http 协议打开！例如 http://localhost/index.html")]),t._v(" "),a("li",[t._v("点击页面上的链接，此时会弹出来标签页 B。")]),t._v(" "),a("li",[t._v("在标签页 B 中打开控制台并执行 sessionStorage.getItem('j')，得到 's'")]),t._v(" "),a("li",[t._v("新建一个新标签页 D，然后在地址栏内输入 http://localhost/index.html 打开同样的页面， 然后执行 sessionStorage.getItem('j')")]),t._v(" "),a("li",[t._v("按照我的预期，标签页 D 得到的应该还是 's'，毕竟我认为 sessionStorage 的数据是在同一网站的多个标签页之间共享的。但是我错了，得到的结果是 null")])]),t._v(" "),a("p",[t._v("标签页 B 和标签页 D 之间唯一的不同就是它们被打开的方式：标签页 B 是通过在标签页 A 中点击链接打开的，但标签页 D 是在浏览器地址栏输入地址打开的")]),t._v(" "),a("p",[t._v("通过点击链接（或者用了 window.open）打开的新标签页之间是属于同一个 session 的（因为她们共用了同一个浏览器的进程），但新开一个标签页总是会初始化一个新的 session，即使网站是一样的，它们也不属于同一个 session")]),t._v(" "),a("p",[t._v("localStorage - 只要是同源，不同 Tab 之间均可读写，相互影响。\nsessionStorage - 前提还是同源，\n同一 Tab 的所有同源可读写且相互影响。\n不同 Tab 之间，读写操作独立，“互不影响”。\n上面打引号原因是，"),a("a",{attrs:{target:"_blank"}}),t._v(" 和 window.open() 两种方式创建新 Tab 的初始缓存不一样。前者是全新的一个 sessionStorage 对象，且初始值为空。后者则基于原页面的 sessionStorage 拷贝一份，并作为新 Tab 的初始缓存值。\nCookie - 只要 Domain 和 Path 一致情况下，不同 Tab 之间即可相互读取。Cookie 最宽松的情况是同站即可，就是说 Domain 设为二级域名、Path 设为 /。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/lmk123/blog/issues/66",target:"_blank",rel:"noopener noreferrer"}},[t._v("sessionStorage 的数据会在同一网站的多个标签页之间共享吗？这取决于标签页如何打开"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);