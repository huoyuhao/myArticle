(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{295:function(_,v,t){"use strict";t.r(v);var a=t(10),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"前端性能优化方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化方案"}},[_._v("#")]),_._v(" 前端性能优化方案")]),_._v(" "),v("h2",{attrs:{id:"_1-减少耗时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少耗时"}},[_._v("#")]),_._v(" 1. 减少耗时")]),_._v(" "),v("h3",{attrs:{id:"_1-1-使用缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-使用缓存"}},[_._v("#")]),_._v(" 1.1 使用缓存")]),_._v(" "),v("ul",[v("li",[_._v("本地、运营商DNS查询缓存")]),_._v(" "),v("li",[_._v("DNS预解析（dns-prefetch）")]),_._v(" "),v("li",[_._v("CDN缓存静态资源 部署CDN静态资源")]),_._v(" "),v("li",[_._v("HTTP缓存 强缓存、协商缓存 nginx设置响应头")]),_._v(" "),v("li",[_._v("后台缓存 中间层接口缓存、后台数据计算缓存Redis")]),_._v(" "),v("li",[_._v("前端缓存 keep-alive locastorage session 存储数据")])]),_._v(" "),v("h3",{attrs:{id:"_1-2-减少请求耗时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-减少请求耗时"}},[_._v("#")]),_._v(" 1.2 减少请求耗时")]),_._v(" "),v("ul",[v("li",[_._v("打包 代码分割，不要只做一个大包。如果你的包大小超过 50-100kB，就把它拆分成几个小包。（通过 HTTP/2 多路复用可以同时传输多个请求和响应消息，从而减少额外请求的开销）")]),_._v(" "),v("li",[_._v("HTTP/2 多路复用")]),_._v(" "),v("li",[_._v("可通过CSS Sprite（又称CSS雪碧）—将多个图片整合到一个图片中")]),_._v(" "),v("li",[_._v("小图片icon使用base64")])]),_._v(" "),v("h2",{attrs:{id:"_2-减少资源大小"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少资源大小"}},[_._v("#")]),_._v(" 2. 减少资源大小")]),_._v(" "),v("ul",[v("li",[_._v("nginx 开启gzip压缩，减少请求传输过程中数据大小 40%")]),_._v(" "),v("li",[_._v("HTTP/2 请求头压缩")]),_._v(" "),v("li",[_._v("打包 Tree-shaking 清除项目中的一些无用代码 依赖ES中的模块语法得以实现")]),_._v(" "),v("li",[_._v("打包 针对图片进行压缩")]),_._v(" "),v("li",[_._v("打包 按需加载，减少无用包的引入")]),_._v(" "),v("li",[_._v("减小第三方库的大小，如Moment.js/lodash等，使用轻量级别替代方案或者自己重新实现 dayjs")])]),_._v(" "),v("h2",{attrs:{id:"_3-css优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-css优化"}},[_._v("#")]),_._v(" 3. css优化")]),_._v(" "),v("ul",[v("li",[_._v("避免css表达式")]),_._v(" "),v("li",[_._v("用link代替@import; 使用css@import会造成额外的请求")]),_._v(" "),v("li",[_._v("避免使用filters")]),_._v(" "),v("li",[_._v("css文件合并与压缩（压缩和削减，去掉空格回车符转译名称）")]),_._v(" "),v("li",[_._v("降低 CSS 选择器的复杂性，读取选择器，遵循从右到左读取。避免通配符，最大化样式继承，少用标签选择器，减少过深嵌套")]),_._v(" "),v("li",[_._v("使用新版的 flex 进行布局比我们用的一些“老式”方法性能更好")])]),_._v(" "),v("h2",{attrs:{id:"_4-js优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-js优化"}},[_._v("#")]),_._v(" 4. js优化")]),_._v(" "),v("ul",[v("li",[_._v("使用外部javascript和css文件")]),_._v(" "),v("li",[_._v("去除重复脚本，避免重复的资源请求")]),_._v(" "),v("li",[_._v("减少DOM访问（修改和访问DOM元素会造成页面的重绘和重排，循环对DOM操作更是减慢页面加载速度）")]),_._v(" "),v("li",[_._v("js文件合并与压缩（将变量替换为短命名、去掉多余的换行符等）")]),_._v(" "),v("li",[_._v("避免使用with，try-catch，eval等动态作用域语句，运行效率低")])]),_._v(" "),v("h2",{attrs:{id:"_5-图片优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-图片优化"}},[_._v("#")]),_._v(" 5. 图片优化")]),_._v(" "),v("ul",[v("li",[_._v("优化图片大小")]),_._v(" "),v("li",[_._v("可通过CSS Sprite（又称CSS雪碧）—将多个图片整合到一个图片中")]),_._v(" "),v("li",[_._v("不要在html中缩放图片")]),_._v(" "),v("li",[_._v("使用小且可缓存的favicon.ico")]),_._v(" "),v("li",[_._v("避免img、iframe等标签的src属性为空：空src会重新加载当前页面，影响速度和效率")]),_._v(" "),v("li",[_._v("图片懒加载 根据可视区域进行判断")]),_._v(" "),v("li",[_._v("使用 SVG 应对矢量图场景、使用静音（muted）的 video 来代替 GIF")]),_._v(" "),v("li",[_._v("渐进式 JPEG会从模糊到逐渐清晰，使人的感受上会更加平滑，但解码速度会慢于基线 JPEG，所以还是需要综合考虑 CPU、网络等情况，在实际的用户体验之上做权衡")])]),_._v(" "),v("h2",{attrs:{id:"_6-dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-dom"}},[_._v("#")]),_._v(" 6. Dom")]),_._v(" "),v("ul",[v("li",[_._v("合并多次对DOM和样式的修改")]),_._v(" "),v("li",[_._v("对于大量列表的滚到使用虚拟列表")]),_._v(" "),v("li",[_._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来")]),_._v(" "),v("li",[_._v("使用事件委托来减少事件处理器的数量")]),_._v(" "),v("li",[_._v("使用函数节流（throttle）或函数去抖（debounce），限制某一个方法的频繁触发")]),_._v(" "),v("li",[_._v("CSS是阻塞的资源 尽早（CSS放在head里）和尽快（启用CDN）。浏览器在构建CSSOM的过程中，不会渲染任何已处理的内容，即便DOM已经解析完毕了，防止浏览器有可能还未下载和解析到CSS就已经开始渲染页面")]),_._v(" "),v("li",[_._v("JS阻塞 加载或者执行JS时会阻塞对标签的解析，也就是阻塞了DOM 树的形成，只有等到JS执行完毕，浏览器才会继续解析标签（因为加载的 JS 中可能会创建，删除节点）")]),_._v(" "),v("li",[_._v("defer 并行下载，不会阻塞 HTML 解析，等到 DOM 生成完毕且 script 加载完毕再执行 JS")]),_._v(" "),v("li",[_._v("async 并行下载，表示异步执行引入的 JS，加载时不会阻塞 HTML解析，但是加载完成后立马执行，此时仍然会阻塞 load 事件")])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("标签")]),_._v(" "),v("th",[_._v("js执行顺序")]),_._v(" "),v("th",[_._v("阻塞解析HTML")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("scipt")]),_._v(" "),v("td",[_._v("在HTML中的顺序")]),_._v(" "),v("td",[_._v("阻塞")])]),_._v(" "),v("tr",[v("td",[_._v("scipt defer")]),_._v(" "),v("td",[_._v("在HTML中的顺序")]),_._v(" "),v("td",[_._v("阻塞")])]),_._v(" "),v("tr",[v("td",[_._v("scipt async")]),_._v(" "),v("td",[_._v("网络请求返回顺序")]),_._v(" "),v("td",[_._v("可能阻塞，也可能不阻塞")])])])]),_._v(" "),v("p",[v("a",{attrs:{href:"http://www.blog.liamhuo.com/web/2-Js%E5%9F%BA%E7%A1%80/00-Js%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93.html#_6-script-%E6%A0%87%E7%AD%BE%E4%B8%AD-defer-%E5%92%8C-async-%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"}},[_._v("详细区别"),v("OutboundLink")],1)]),_._v(" "),v("h2",{attrs:{id:"_7-其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-其他"}},[_._v("#")]),_._v(" 7. 其他")]),_._v(" "),v("ul",[v("li",[_._v("图片、流量、组件懒加载 根据可视区域进行判断")]),_._v(" "),v("li",[_._v("web worker 表格数据导出，增加线程，一些大计算量的代码交由web Worker运行，避免阻塞用户界面")]),_._v(" "),v("li",[_._v("对首评秒开要求较高的，可对首屏请求的接口进行拆分，快速响应首屏需要用到的字段，其他的数据异步加载")]),_._v(" "),v("li",[_._v("开启骨架屏，提升用户体验，避免加载到渲染过程中都是白屏阶段")]),_._v(" "),v("li",[_._v("开启服务端渲染，减少http请求交互时间")]),_._v(" "),v("li",[_._v("使用for循环，执行速度最快")]),_._v(" "),v("li",[_._v("把递归算法改用迭代算法实现是避免调用栈溢出错误的解决方法之一")]),_._v(" "),v("li",[_._v("慎用全局变量，因为调用链查找耗时比较大，可以将经常使用的全局变量引用储存在一个局部变量里")])]),_._v(" "),v("p",[_._v("// todo")]),_._v(" "),v("ul",[v("li",[_._v("预加载 Preload & Prefetch 的区别")])]),_._v(" "),v("h2",{attrs:{id:"_8-参考文章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-参考文章"}},[_._v("#")]),_._v(" 8. 参考文章")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://alienzhou.github.io/fe-performance-journey",target:"_blank",rel:"noopener noreferrer"}},[_._v("前端性能优化之旅"),v("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=r.exports}}]);