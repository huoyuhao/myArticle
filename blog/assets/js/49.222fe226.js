(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{402:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript正则表达式"}},[t._v("#")]),t._v(" JavaScript正则表达式")]),t._v(" "),a("h2",{attrs:{id:"_1-元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-元字符"}},[t._v("#")]),t._v(" 1. 元字符")]),t._v(" "),a("h3",{attrs:{id:"_1-1-边界字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-边界字符"}},[t._v("#")]),t._v(" 1.1 边界字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\")]),t._v(" "),a("td",[t._v("将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，'n' 匹配字符 \"n\"。'\\n' 匹配一个换行符")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 '\\n' 或 '\\r' 之后的位置。")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 '\\n' 或 '\\r' 之前的位置。")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如， 'er\\b' 可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er'。")])]),t._v(" "),a("tr",[a("td",[t._v("\\B")]),t._v(" "),a("td",[t._v("匹配非单词边界。")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-字符组"}},[t._v("#")]),t._v(" 1.2 字符组")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[]")]),t._v(" "),a("td",[t._v("字符集合。匹配所包含的任意一个字符。例如， '[abc]' 可以匹配 \"plain\" 中的 'a'。")])]),t._v(" "),a("tr",[a("td",[t._v("()")]),t._v(" "),a("td",[t._v("捕获组（子表达式）。所获取的匹配可以从产生的 Matches 集合得到，")])]),t._v(" "),a("tr",[a("td",[t._v("x|y")]),t._v(" "),a("td",[t._v('匹配 x 或 y。例如，\'z|food\' 能匹配 "z" 或 "food"。\'(z|f)ood\' 则匹配 "zood" 或 "food"。')])])])]),t._v(" "),a("h3",{attrs:{id:"_1-3-量组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-量组"}},[t._v("#")]),t._v(" 1.3 量组")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("0到无数次")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("1到无数次")])]),t._v(" "),a("tr",[a("td",[t._v("?")]),t._v(" "),a("td",[t._v("0 或者1 次（非贪婪模式后面讲）")])]),t._v(" "),a("tr",[a("td",[t._v("{n}")]),t._v(" "),a("td",[t._v("重复N次")])]),t._v(" "),a("tr",[a("td",[t._v("{n,}")]),t._v(" "),a("td",[t._v("重复至少N次")])]),t._v(" "),a("tr",[a("td",[t._v("{n,m}")]),t._v(" "),a("td",[t._v("n到m次")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-4-特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-特殊字符"}},[t._v("#")]),t._v(" 1.4 特殊字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",[t._v("匹配除换行符（\\n、\\r）之外的任何单个字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。")])]),t._v(" "),a("tr",[a("td",[t._v("\\S")]),t._v(" "),a("td",[t._v("匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。")])]),t._v(" "),a("tr",[a("td",[t._v("\\w")]),t._v(" "),a("td",[t._v("匹配字母、数字、下划线。等价于'[A-Za-z0-9_]'。")])]),t._v(" "),a("tr",[a("td",[t._v("\\W")]),t._v(" "),a("td",[t._v("匹配非字母、数字、下划线。等价于 '[^A-Za-z0-9_]'。")])]),t._v(" "),a("tr",[a("td",[t._v("\\d")]),t._v(" "),a("td",[t._v("匹配一个数字字符。等价于 [0-9]。")])]),t._v(" "),a("tr",[a("td",[t._v("\\D")]),t._v(" "),a("td",[t._v("匹配一个非数字字符。等价于 [^0-9]。")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-5-斜杠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-斜杠"}},[t._v("#")]),t._v(" 1.5 斜杠")]),t._v(" "),a("p",[t._v("字符串需要一个斜杠转译 正则需要一个斜杠转译")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc123de'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc123de'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6写法 ES5报错")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc123de'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_2-修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修饰符"}},[t._v("#")]),t._v(" 2. 修饰符")]),t._v(" "),a("h3",{attrs:{id:"_2-1-修饰符-i-ignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-修饰符-i-ignore"}},[t._v("#")]),t._v(" 2.1 修饰符 i (ignore)")]),t._v(" "),a("p",[t._v("不区分大小写")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu[a-z]+/i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Yuhoo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Yuhoo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-2-修饰符-g-global"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-修饰符-g-global"}},[t._v("#")]),t._v(" 2.2 修饰符 g (global)")]),t._v(" "),a("p",[t._v("全局匹配")]),t._v(" "),a("ul",[a("li",[t._v("如果不带g，正则过程中字符串从左到右匹配，找到第一个符合条件的即匹配成功，返回")]),t._v(" "),a("li",[t._v("如果带g，则字符串从左到右，找到每个符合条件的都记录下来，知道字符串结尾位置")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo Yuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu[a-z]+/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  ["yuhoo", "Yuki"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2b3c4d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d[a-z]\\d/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  ["1a2", "3c4"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从上次匹配结尾再次进行匹配")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-3-修饰符-m-more"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-修饰符-m-more"}},[t._v("#")]),t._v(" 2.3 修饰符 m (more)")]),t._v(" "),a("p",[t._v("多行匹配配")]),t._v(" "),a("ul",[a("li",[t._v("若存在换行\\n并且有开始^或结束$符的情况下，和g一起使用实现全局匹配,")]),t._v(" "),a("li",[t._v("因为存在换行时默认会把换行符作为一个字符任务匹配字符串是个单行，")]),t._v(" "),a("li",[t._v("g只匹配第一行，添加m之后实现多行，每个换行符之后就是开始")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo\\nYuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^yu[a-z]+/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["yuhoo"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo\\nYuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^yu[a-z]+/igm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["yuhoo", "Yuki"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-4-修饰符-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-修饰符-s"}},[t._v("#")]),t._v(" 2.4 修饰符 s")]),t._v(" "),a("p",[t._v("修饰符 s 表示特殊字符圆点 . 中包含换行符")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo\\nYuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu(.)+/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["yuhoo", "Yuki"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo\\nYuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu(.)+/isg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["yuhoo↵Yuki"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-5-修饰符-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-修饰符-y"}},[t._v("#")]),t._v(" 2.5 修饰符 y")]),t._v(" "),a("p",[t._v("y修饰符的作用与g修饰符类似，也是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。不同之处在于，g修饰符只要剩余位置中存在匹配就可，而y修饰符确保匹配必须从剩余的第一个位置开始，这也就是“粘连”的涵义。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2b3c4e5f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d[a-z]\\d/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1a2", "3c4"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2b3c4e5f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d[a-z]\\d/yg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1a2"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a22b33c44e5f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d[a-z]\\d/yg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1a2", "2b3", "3c4", "4e5"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"_3-js函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-js函数"}},[t._v("#")]),t._v(" 3. Js函数")]),t._v(" "),a("h3",{attrs:{id:"_3-1-string函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-string函数"}},[t._v("#")]),t._v(" 3.1 String函数")]),t._v(" "),a("h4",{attrs:{id:"_3-1-1-search-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-search-regexp"}},[t._v("#")]),t._v(" 3.1.1 Search(regexp)")]),t._v(" "),a("ul",[a("li",[t._v("检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串")]),t._v(" "),a("li",[t._v("一个与 regexp 相匹配的子串的起始位置")]),t._v(" "),a("li",[t._v("不执行全局匹配，它将忽略标志 g")]),t._v(" "),a("li",[t._v("返回正则表达式在字符串中首次匹配项的索引，否则，返回 "),a("code",[t._v("-1")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo\\nYuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/Yu(.)+/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3-1-2-match-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-match-regexp"}},[t._v("#")]),t._v(" 3.1.2 Match(regexp)")]),t._v(" "),a("ul",[a("li",[t._v("如果使用g标志，则将返回与完整正则表达式匹配的所有结果（Array），但不会返回捕获组，或者未匹配 null")]),t._v(" "),a("li",[t._v("如果未使用g标志，则仅返回第一个完整匹配及其相关的捕获组（Array）。 在这种情况下，返回的项目将具有如下所述的其他属性，或者未匹配 null。\n"),a("ul",[a("li",[t._v("groups: 一个捕获组数组 或 undefined（如果没有定义命名捕获组）")]),t._v(" "),a("li",[t._v("index: 匹配的结果的开始位置")]),t._v(" "),a("li",[t._v("input: 搜索的字符串")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo Yuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu([a-z])+/i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yuhoo"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"o"')]),t._v("\n  groups"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n  index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yuhoo Yuki"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yuhoo Yuki'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/yu[a-z]+/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["yuhoo", "Yuki"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h4",{attrs:{id:"_3-1-3-replace-regexp-replacement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-replace-regexp-replacement"}},[t._v("#")]),t._v(" 3.1.3 Replace(regexp, replacement)")]),t._v(" "),a("p",[t._v("Replacement 可以是字符串或者函数")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jarvis yuhoo tab simba"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w+)\\s*(\\w+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$2 $1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "yuhoo jarvis tab simba"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jarvis yuhoo tab simba"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\b(\\w+)\\b/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Jarvis Yuhoo Tab Simba"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jarvis yuhoo tab simba"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\b(\\w)(\\w+)\\b/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Jarvis Yuhoo Tab Simba"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"_3-2-regexp函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-regexp函数"}},[t._v("#")]),t._v(" 3.2 RegExp函数")]),t._v(" "),a("h4",{attrs:{id:"_3-2-1-exec-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-exec-string"}},[t._v("#")]),t._v(" 3.2.1 Exec(String)")]),t._v(" "),a("p",[t._v("在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 null。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d[a-z]\\d/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2b3c4d5e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1a2"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2b3c4d5e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "3c4"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("每次从上次结束位置开始匹配")]),t._v(" "),a("h2",{attrs:{id:"_4-贪婪模式和非贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-贪婪模式和非贪婪模式"}},[t._v("#")]),t._v(" 4. 贪婪模式和非贪婪模式")]),t._v(" "),a("h3",{attrs:{id:"_4-1-贪婪匹配模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-贪婪匹配模式"}},[t._v("#")]),t._v(" 4.1 贪婪匹配模式")]),t._v(" "),a("p",[t._v("正则表达式去匹配时，会尽量多的匹配符合条件的内容")]),t._v(" "),a("p",[t._v("标识符\n"),a("code",[t._v("+ ? * {n} {n,} {n,m}")])]),t._v(" "),a("h3",{attrs:{id:"_4-2-非贪婪匹配模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-非贪婪匹配模式"}},[t._v("#")]),t._v(" 4.2 非贪婪匹配模式")]),t._v(" "),a("p",[t._v("正则表达式去匹配时，会尽量少的匹配符合条件的内容 也就是说，一旦发现匹配符合要求，立马就匹配成功，而不会继续匹配下去(除非有g，开启下一组匹配)")]),t._v(" "),a("p",[t._v("标识符\n"),a("code",[t._v("+? ?? *? {n}? {n,}? {n,m}?")])]),t._v(" "),a("h3",{attrs:{id:"_4-3-回溯现象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-回溯现象"}},[t._v("#")]),t._v(" 4.3 回溯现象")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"a 'jarvis' b 'tim' c 'yuhoo' d\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/'.*'/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [\"'jarvis' b 'tim' c 'yuhoo'\"]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"a 'jarvis' b 'tim' c 'yuhoo' d\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/'.*?'/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [\"'jarvis'\", \"'tim'\", \"'yuhoo'\"]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("其默认是贪婪匹配即尽可能多的匹配")]),t._v(" "),a("ul",[a("li",[t._v("所以最开始我们看到匹配字符 "),a("code",[t._v("'")]),t._v(" 我们开始从a字符匹配 发现不符合 然后接着找...")]),t._v(" "),a("li",[t._v("找到第3个字符发现匹配，于是接着看后面的匹配字符")]),t._v(" "),a("li",[a("code",[t._v(".")]),t._v("匹配换行以外任意字符，而其后面有连词"),a("code",[t._v("*")]),t._v("，0次以上，所以其匹配了字符"),a("code",[t._v("jarvis' b 'tim' c 'yuhoo' d")])]),t._v(" "),a("li",[t._v("然后匹配字符"),a("code",[t._v("'")]),t._v("，发现无法匹配，所以回溯，前面的"),a("code",[t._v(".*")]),t._v("回溯一次")]),t._v(" "),a("li",[t._v("字符d与匹配字符不匹配 接着向前回溯")]),t._v(" "),a("li",[t._v("...")]),t._v(" "),a("li",[t._v("最后找到倒数第3个字符匹配成功，输出匹配字符"),a("code",[t._v("'jarvis' b 'tim' c 'yuhoo'")])])]),t._v(" "),a("p",[t._v("而非贪婪模式是尽可能少的匹配")]),t._v(" "),a("ul",[a("li",[t._v("最开始我们看到匹配字符 "),a("code",[t._v("'")]),t._v(" 我们开始从a字符匹配 发现不符合 然后接着找...")]),t._v(" "),a("li",[t._v("找到第3个字符发现匹配，于是接着看后面的匹配字符")]),t._v(" "),a("li",[a("code",[t._v(".")]),t._v("匹配换行以外任意字符，而其后面有连词"),a("code",[t._v("*?")]),t._v("，所以什么都不匹配，直接匹配后面的规则")]),t._v(" "),a("li",[t._v("字符y与匹配字符"),a("code",[t._v("'")]),t._v("不匹配，进行回溯，前面的匹配规则"),a("code",[t._v(".*?")]),t._v("匹配字符y")]),t._v(" "),a("li",[t._v("字符u与匹配字符"),a("code",[t._v("'")]),t._v("不匹配，进行回溯，前面的匹配规则"),a("code",[t._v(".*?")]),t._v("匹配字符yu")]),t._v(" "),a("li",[t._v("...")]),t._v(" "),a("li",[t._v("直到匹配第8个字符，完成第一次匹配"),a("code",[t._v("'jarvis'")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jarvisTestAb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/jarvis([a-zA-Z]*)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jarvisTestAb", "TestAb"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jarvisTestAb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/jarvis([a-zA-Z])*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jarvisTestAb", "b"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jarvisTestAb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/jarvis([a-zA-Z][a-zA-Z])*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jarvisTestAb", "Ab"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jarvisTestAbc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/jarvis([a-zA-Z][a-zA-Z])*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jarvisTestAb", "Ab"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("根据上面例子，为什么第二个捕获组中 *在括号里面和外面不一样。我们一个个来解释")]),t._v(" "),a("ul",[a("li",[t._v("第一个我们看到"),a("code",[t._v("[a-z]*")]),t._v("是说匹配一个或者多个字符，根据贪婪匹配规则，匹配到"),a("code",[t._v("TestAb")])]),t._v(" "),a("li",[t._v("第二个"),a("code",[t._v("([a-z])*")]),t._v("是说匹配一个字母一次多次匹配，最后一次匹配字母"),a("code",[t._v("b")])]),t._v(" "),a("li",[t._v("第三个"),a("code",[t._v("([a-z][a-z])*")]),t._v('是说一次或者多次匹配2个字母，最后一次啊匹配"Ab"，所以被捕获到')]),t._v(" "),a("li",[t._v("第四个"),a("code",[t._v("([a-z][a-z])*")]),t._v('是说一次或者多次匹配2个字母，最后一次啊匹配"Ab"，而最后的字母c不能被匹配，所以被捕获到')])]),t._v(" "),a("h2",{attrs:{id:"_5-环式结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-环式结构"}},[t._v("#")]),t._v(" 5. 环式结构")]),t._v(" "),a("p",[t._v("环视只进行子表达式的匹配，不占有字符，匹配到的内容不保存到最终的匹配结果，是零宽度的。环视匹配的最终结果就是一个位置。")]),t._v(" "),a("p",[t._v("顺序和逆序两种，按照是否匹配有肯定和否定两种")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("(?<=Expression)")]),t._v(" "),a("td",[t._v("逆序肯定环视，表示所在位置左侧能够匹配Expression")])]),t._v(" "),a("tr",[a("td",[t._v("(?<!Expression)")]),t._v(" "),a("td",[t._v("逆序否定环视，表示所在位置左侧不能匹配Expression")])]),t._v(" "),a("tr",[a("td",[t._v("(?=Expression)")]),t._v(" "),a("td",[t._v("顺序肯定环视，表示所在位置右侧能够匹配Expression")])]),t._v(" "),a("tr",[a("td",[t._v("(?!Expression)")]),t._v(" "),a("td",[t._v("顺序否定环视，表示所在位置右侧不能匹配Expression")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://xxx.com/path?id=12&chn=234'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\?|#|&)id=([^&#]*)(&|#|$)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["id=12&"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://xxx.com/path?id=12&chn=234'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\?|#|&)id=([^&#]*)(?=&|#|$)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["id=12"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234567890.12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\d)(?=(\\d{3})+(?!\\d))/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,234,567,890.12"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("主要看最后一个例子")]),t._v(" "),a("p",[t._v("我们拆开来分析")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("(\\d{3})")]),t._v("              匹配多个连续3个数")]),t._v(" "),a("li",[a("code",[t._v("(\\d{3})+(?!\\d)")]),t._v("   匹配多个连续3个数且其右边与非数字字符相连")]),t._v(" "),a("li",[a("code",[t._v("(?=(\\d{3})+(?!\\d))")]),t._v(" 匹配一个位置 该位置右边为多个连续3个数且其右边与非数字字符相连")]),t._v(" "),a("li",[a("code",[t._v("(?<=\\d)(?=(\\d{3})+(?!\\d))")]),t._v("匹配一个位置 该位置左边是一个数字 该位置右边为多个连续3个数且其右边与非数字字符相连")])]),t._v(" "),a("p",[t._v("补充："),a("strong",[t._v("最近开发时发现微信不支持逆序环视 "),a("code",[t._v("?<= ?<!")]),t._v("会报错")])]),t._v(" "),a("h2",{attrs:{id:"_6-换行符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-换行符"}},[t._v("#")]),t._v(" 6. 换行符")]),t._v(" "),a("h3",{attrs:{id:"_6-1-正则相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-正则相关"}},[t._v("#")]),t._v(" 6.1 正则相关")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",[t._v("匹配任何空白字符，包括空格、换页(\\f)、换行(\\n)、回车(\\r ) 、水平制表符(\\t ) 、垂直制表符(\\v )、等价于 [ \\f\\n\\r\\t\\v]")])]),t._v(" "),a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("匹配一个换行符。等价于 \\x0a 和 \\cJ。")])]),t._v(" "),a("tr",[a("td",[t._v("\\r")]),t._v(" "),a("td",[t._v("匹配一个回车符。等价于 \\x0d 和 \\cM。")])])])]),t._v(" "),a("h4",{attrs:{id:"起源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起源"}},[t._v("#")]),t._v(" 起源")]),t._v(" "),a("p",[t._v("在计算机还没有出现之前，有一种叫做电传打字机（Teletype Model 33）的玩意，每秒钟可以打10个字符。但是它有一个问题，就是打完一行换行的时候，要用去0.2秒，正好可以打两个字符。要是在这0.2秒里面，又有新的字符传过来，那么这个字符将丢失。")]),t._v(" "),a("p",[t._v("于是，研制人员想了个办法解决这个问题，就是在每行后面加两个表示结束的字符。一个叫做“回车”，告诉打字机把打印头定位在左边界；另一个叫做“换行”，告诉打字机把纸向下移一行。")]),t._v(" "),a("h3",{attrs:{id:"_6-2-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-区别"}},[t._v("#")]),t._v(" 6.2 区别")]),t._v(" "),a("p",[t._v("Unix系统里，每行结尾只有“<换行>”，即“\\n”；Windows系统里面，每行结尾是“<回车><换行>”，即“\\r\\n”；Mac系统里，每行结尾是“<回车>”。一个直接后果是，Unix/Mac系统下的文件在Windows里打开的话，所有文字会变成一行；而Windows里的文件在Unix/Mac下打开的话，在每行的结尾可能会多出一个^M符号。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("环境")]),t._v(" "),a("th",[t._v("换行")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("win")]),t._v(" "),a("td",[t._v("\\r\\n")])]),t._v(" "),a("tr",[a("td",[t._v("linux unix")]),t._v(" "),a("td",[t._v("\\n")])]),t._v(" "),a("tr",[a("td",[t._v("mac os")]),t._v(" "),a("td",[t._v("\\r")])])])]),t._v(" "),a("h3",{attrs:{id:"_6-3-实例分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-实例分析"}},[t._v("#")]),t._v(" 6.3 实例分析")]),t._v(" "),a("p",[t._v("在linux环境 输入命令")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("echo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("en "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1\\n2\\r\\n3'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\nvim  test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("查看到内容如下")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("文件在win环境中打开显示")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("如果是一个win文件在linux中打开发现没有^M标记")]),t._v(" "),a("p",[t._v("按理说每个换行后面应该多一个^M标记 但是因为linux系统会检测文件换行格式，如果是\\r\\n会自动标识为win环境进行换行。")]),t._v(" "),a("h3",{attrs:{id:"_6-4-js使用换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-js使用换行"}},[t._v("#")]),t._v(" 6.4 js使用换行")]),t._v(" "),a("h4",{attrs:{id:"_6-4-1-alert-弹框换行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-alert-弹框换行结果"}},[t._v("#")]),t._v(" 6.4.1 alert 弹框换行结果")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好<br/>我是yuhoo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不换行打印标签</br>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好\\n我是yuhoo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 换行")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"_6-4-2-innerhtml-html-v-html方法中换行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-innerhtml-html-v-html方法中换行结果"}},[t._v("#")]),t._v(" 6.4.2 innerHTML/ html( )/v-html方法中换行结果")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好<br>请换行"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 换行")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好\\n请换行'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不换行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试网址 https://www.runoob.com/regexp/regexp-tutorial.html")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"_6-4-3-innertext-text-v-text方法中使用-n换行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-3-innertext-text-v-text方法中使用-n换行结果"}},[t._v("#")]),t._v(" 6.4.3 innerText/ text( )/v-text方法中使用\\n换行结果")]),t._v(" "),a("p",[t._v('Vue项目中v-text中使用\\n效果同v-html 不会换行\n使用正则替换为<br>\nXXX.replace(/\\n/gm,"<br>")')]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好<br>请换行"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不换行")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好\\n请换行"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 换行")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_6-5-软回车与硬回车"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-软回车与硬回车"}},[t._v("#")]),t._v(" 6.5 软回车与硬回车")]),t._v(" "),a("p",[t._v("软回车是用 Shift + Enter 产生的，它换行，但是并不换段\n即前后两段文字在 Word 中属于同一“段”")])])}),[],!1,null,null,null);s.default=e.exports}}]);