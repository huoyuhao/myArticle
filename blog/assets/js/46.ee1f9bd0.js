(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{320:function(e,t,a){"use strict";a.r(t);var _=a(10),r=Object(_.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"flex布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[e._v("#")]),e._v(" Flex布局")]),e._v(" "),t("h2",{attrs:{id:"_1-flex布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex布局"}},[e._v("#")]),e._v(" 1. flex布局")]),e._v(" "),t("p",[e._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性')]),e._v(" "),t("p",[e._v("设为 Flex 布局以后，"),t("strong",[e._v("子元素的float、clear和vertical-align属性将失效")])]),e._v(" "),t("h2",{attrs:{id:"_2-容器属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-容器属性"}},[e._v("#")]),e._v(" 2. 容器属性")]),e._v(" "),t("h3",{attrs:{id:"_2-1-flex-direction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-flex-direction"}},[e._v("#")]),e._v(" 2.1 flex-direction")]),e._v(" "),t("p",[e._v("flex-direction属性决定主轴的方向（即项目的排列方向）。")]),e._v(" "),t("ul",[t("li",[e._v("row（默认值）：主轴为水平方向，起点在左端")]),e._v(" "),t("li",[e._v("row-reverse：主轴为水平方向，起点在右端")]),e._v(" "),t("li",[e._v("column：主轴为垂直方向，起点在上沿")]),e._v(" "),t("li",[e._v("column-reverse：主轴为垂直方向，起点在下沿")])]),e._v(" "),t("h3",{attrs:{id:"_2-2-flex-wrap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-flex-wrap"}},[e._v("#")]),e._v(" 2.2 flex-wrap")]),e._v(" "),t("p",[e._v('默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行')]),e._v(" "),t("ul",[t("li",[e._v("nowrap（默认）：不换行")]),e._v(" "),t("li",[e._v("wrap：换行，第一行在上方")]),e._v(" "),t("li",[e._v("wrap-reverse：换行，第一行在下方")])]),e._v(" "),t("h3",{attrs:{id:"_2-3-flex-flow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-flex-flow"}},[e._v("#")]),e._v(" 2.3 flex-flow")]),e._v(" "),t("p",[e._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。")]),e._v(" "),t("p",[e._v("flex-flow: <flex-direction> || <flex-wrap>;")]),e._v(" "),t("h3",{attrs:{id:"_2-4-justify-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-justify-content"}},[e._v("#")]),e._v(" 2.4 justify-content")]),e._v(" "),t("p",[e._v("justify-content属性定义了项目在主轴上的对齐方式。")]),e._v(" "),t("ul",[t("li",[e._v("flex-start（默认值）：左对齐")]),e._v(" "),t("li",[e._v("flex-end：右对齐")]),e._v(" "),t("li",[e._v("center： 居中")]),e._v(" "),t("li",[e._v("space-between：两端对齐，项目之间的间隔都相等")]),e._v(" "),t("li",[e._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍")])]),e._v(" "),t("h3",{attrs:{id:"_2-5-align-items"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-align-items"}},[e._v("#")]),e._v(" 2.5 align-items")]),e._v(" "),t("p",[e._v("align-items属性定义项目在交叉轴上如何对齐")]),e._v(" "),t("ul",[t("li",[e._v("stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度")]),e._v(" "),t("li",[e._v("flex-start：交叉轴的起点对齐")]),e._v(" "),t("li",[e._v("flex-end：交叉轴的终点对齐")]),e._v(" "),t("li",[e._v("center：交叉轴的中点对齐")]),e._v(" "),t("li",[e._v("baseline: 项目的第一行文字的基线对齐")])]),e._v(" "),t("h3",{attrs:{id:"_2-6-align-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-align-content"}},[e._v("#")]),e._v(" 2.6 align-content")]),e._v(" "),t("p",[e._v("align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用")]),e._v(" "),t("ul",[t("li",[e._v("stretch（默认值）：轴线占满整个交叉轴")]),e._v(" "),t("li",[e._v("flex-start：与交叉轴的起点对齐")]),e._v(" "),t("li",[e._v("flex-end：与交叉轴的终点对齐")]),e._v(" "),t("li",[e._v("center：与交叉轴的中点对齐")]),e._v(" "),t("li",[e._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布")]),e._v(" "),t("li",[e._v("pace-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍")])]),e._v(" "),t("h2",{attrs:{id:"_3-子项属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-子项属性"}},[e._v("#")]),e._v(" 3. 子项属性")]),e._v(" "),t("h3",{attrs:{id:"_3-1-order"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-order"}},[e._v("#")]),e._v(" 3.1 order")]),e._v(" "),t("p",[e._v("order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0")]),e._v(" "),t("h3",{attrs:{id:"_3-2-flex-grow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-flex-grow"}},[e._v("#")]),e._v(" 3.2 flex-grow")]),e._v(" "),t("p",[e._v("flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大")]),e._v(" "),t("p",[e._v("如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍")]),e._v(" "),t("h3",{attrs:{id:"_3-3-flex-shrink"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-flex-shrink"}},[e._v("#")]),e._v(" 3.3 flex-shrink")]),e._v(" "),t("p",[e._v("flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小")]),e._v(" "),t("p",[e._v("如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。")]),e._v(" "),t("h3",{attrs:{id:"_3-4-flex-basis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-flex-basis"}},[e._v("#")]),e._v(" 3.4 flex-basis")]),e._v(" "),t("p",[e._v("flex-basis定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小")]),e._v(" "),t("h3",{attrs:{id:"_3-5-flex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-flex"}},[e._v("#")]),e._v(" 3.5 flex")]),e._v(" "),t("p",[e._v("flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选")]),e._v(" "),t("p",[e._v("该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。")]),e._v(" "),t("h3",{attrs:{id:"_3-6-align-self"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-align-self"}},[e._v("#")]),e._v(" 3.6 align-self")]),e._v(" "),t("p",[e._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch")]),e._v(" "),t("h2",{attrs:{id:"_4-参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-参考"}},[e._v("#")]),e._v(" 4. 参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：语法篇"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);